name: 'Rd SSH Updates'
description: 'Update Composer dependencies over ssh with logging.'
author: 'uriel'
branding:
  icon: 'upload-cloud'
  color: 'blue'
inputs:
  web_app_path:
    description: 'Path to the web application.'
    required: true
  ssh_host:
    description: 'SSH host'
    required: true
  ssh_username:
    description: 'SSH username'
    required: true
  ssh_password:
    description: 'SSH password'
    required: true
  ssh_port:
    description: 'SSH port'
    required: true
  slack_webhook:
    description: 'Slack Webhook URL'
    required: true
runs:
  using: 'composite'
  steps:
    - name: "Execute Remote SSH Updates"
      uses: appleboy/ssh-action@v0.1.10
      with:
        host: ${{ inputs.ssh_host }}
        username: ${{ inputs.ssh_username }}
        password: ${{ inputs.ssh_password }}
        port: ${{ inputs.ssh_port }}
        script: |
          set -eo # Stop on error

          WEB_APP_PATH=${{ inputs.web_app_path }}
          TIMESTAMP=$(date +%Y%m%d_%H%M%S)
          LOCK_FILE="${WEB_APP_PATH}/composer.lock"
          LOCK_FILE_DIR="${WEB_APP_PATH}/storage/logs/updates/lock/$(date +%Y/%m)"
          LOCK_FILE_BACKUP="${LOCK_FILE_DIR}/composer.lock.${TIMESTAMP}.bak"
          UPDATES_LOG_DIR="${WEB_APP_PATH}/storage/logs/$(date +%Y/%m)"
          UPDATES_LOG_FILE="${WEB_APP_PATH}/storage/logs/$(date +%Y/%m/rd-update-%Y-%m-%d_%H%M%S).log"

          echo "➤ Back up the lock file..."
          mkdir -p $LOCK_FILE_DIR && cp $LOCK_FILE $LOCK_FILE_BACKUP

          echo "➤ Run Updates and Install dependencies..."
          cd $WEB_APP_PATH && mkdir -p $UPDATES_LOG_DIR && composer update >> $UPDATES_LOG_FILE 2>&1

          echo "✓ Updates Completed!"

    - name: "Send Update Notification to Slack"
      uses: rtCamp/action-slack-notify@v2
      env:
        SLACK_CHANNEL: general
        SLACK_ICON: https://user-images.githubusercontent.com/4777400/225331174-d5ae1c0e-5ec0-493b-aabc-91c4cc6a14c4.png
        SLACK_COLOR: ${{ job.status }}
        SLACK_TITLE: "Web Application Update Notification"
        SLACK_MESSAGE: "Update process completed. Check logs for details."
        SLACK_USERNAME: "WebApp Update Bot"
        SLACK_WEBHOOK: ${{ inputs.slack_webhook }}
        SLACK_FOOTER: "Web Application Update Status"
        MSG_MINIMAL: true

